name: Clone All Org Repos

on:
  workflow_dispatch: # Manually trigger workflow

jobs:
  clone-repos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      
  

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh
      - name: Authenticate with GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}  # Ensure GH_PAT is set in secrets
        run: echo "$GH_TOKEN" | gh auth login --with-token

      - name: Fetch and Clone All Repositories
        env:
          ORG_NAME: Organizationgitrsecrets1  # Set your GitHub org name
        run: |
          mkdir -p org-repos
          cd org-repos
          
          # List all repositories and clone them
          gh repo list $ORG_NAME --limit 100 --json nameWithOwner --jq '.[].nameWithOwner' | while read repo; do
            gh repo clone "$repo"
          done
      - name: Download gitsecretpatternfile from the repository
        run: |
          # Checkout the file from the workflow path
          cp .github/workflows/gitsecretpatternfile.txt ./gitsecretpatternfile.txt
      - name: Run git secrets scan on all repositories
        run: |
          cd org-repos
          SCAN_RESULT=""
          for repo in */; do
            cd "$repo"
            echo "Running git secrets scan on $(basename "$repo")..."
            
            # Copy the gitsecretpatternfile.txt to the current repo folder
            cp ../../.github/workflows/gitsecretpatternfile.txt .  # Copy pattern file from the workflow directory to the repo
            
            # Set up git secrets in the repo (only if it's not installed already)
            if ! command -v git-secrets &> /dev/null; then
              sudo apt-get update && sudo apt-get install -y git-secrets
            fi
             
            if [ -f gitsecretpatternfile.txt ]; then
              while IFS= read -r pattern; do
                git secrets --add "$pattern"
              done < gitsecretpatternfile.txt
            else
              echo "patterns file not found!"
            fi
            
            # Scan the repo for secrets
            git secrets --scan --recursive > result 2>&1 || true
            curl -X POST -F file=@result -F "initial_comment=Shakes the cat" -F channels=D08FRK2F9HS -H "Authorization: Bearer ${{ secrets.SLACK_WEBHOOK_SECRET }}" -H "Content-Type:multipart/form-data" https://slack.com/api/files.completeUploadExternal
            curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\": \"$(cat result)\"}" \
            ${{ secrets.SLACK_WEBHOOK_SECRET }} 
            echo "Potential secrets found"

            cd ..    
          done
      - name: CAT
        run: |
          cd org-repos 
          cd Synksecrets
          pwd
          ls
          cat result
          cd .. 
          cd WRONGSECRETS
          cat result
      - name: Send message to Slack
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text": "hello"}' \
          ${{ secrets.SLACK_WEBHOOK_SECRET }} 
