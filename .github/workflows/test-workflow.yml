name: Clone All Org Repos

on:
  workflow_dispatch: # Manually trigger workflow

jobs:
  clone-repos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      
  

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh
      - name: Authenticate with GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}  # Ensure GH_PAT is set in secrets
        run: echo "$GH_TOKEN" | gh auth login --with-token

      - name: Fetch and Clone All Repositories
        env:
          ORG_NAME: Organizationgitrsecrets1  # Set your GitHub org name
        run: |
          mkdir -p org-repos
          cd org-repos
          
          # List all repositories and clone them
          gh repo list Organizationgitrsecrets1 --limit 1000 | grep -v 'archived' | awk '{print $1}' > Org_repos_name.txt 
          while IFS= read -r repo; do
            gh repo clone "$repo"
          done < Org_repos_name.txt 
      - name: Download gitsecretpatternfile from the repository
        run: |
          # Checkout the file from the workflow path
          cp .github/workflows/gitsecretpatternfile.txt ./gitsecretpatternfile.txt
          cp .github/workflows/allowedlist.txt ./allowedlist.txt
          
      - name: Run git secrets scan on all repositories
        run: | 
          sudo apt-get update && sudo apt-get install -y git-secrets   # Install git-secrets tool
          cd org-repos
          
          for repo in */; do
            cd "$repo"
            
            
            # Copy the gitsecretpatternfile.txt to the current repo folder
            cp ../../.github/workflows/gitsecretpatternfile.txt .  # Copy pattern file from the workflow directory to the repo
            cp ../../.github/workflows/allowedlist.txt . # Copy allowed list from the workflow directory to the repo
            
            if [ -f gitsecretpatternfile.txt ]; then
              while IFS= read -r pattern; do
                git secrets --add "$pattern"
              done < gitsecretpatternfile.txt
            else
              echo "patterns file not found!"
            fi
            if [ -f allowedlist.txt ]; then
              while IFS= read -r allowed_pattern; do
                git secrets --add --allowed "$allowed_pattern"
              done < allowedlist.txt
            else
              echo "allowed_patterns file not found!"
            fi
            # Scan the repo for secrets
            git secrets --scan --recursive > result 2>&1 || true
            
            webhook_url=${{ secrets.SLACK_WEBHOOK_SECRET }}
            cp ../../.github/workflows/escapeinput.sh ./escapeinput.sh
            chmod +x escapeinput.sh
            escapeinput.sh
              curl -X POST -H 'Content-type: application/json' --data '{"text":"*/ '"$repo"'*"}' $webhook_url
            # Read the file line by line'
              file="result"
              while IFS= read -r line; do
                escaped_line=$(escape_json "$line")
                curl -X POST -H 'Content-type: application/json' --data '{"text":"'"$escaped_line"'"}' $webhook_url
                sleep 2
              done < "$file"
            cd ..    
          done
